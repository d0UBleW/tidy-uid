---
- name: Provision
  become: true
  gather_facts: false
  hosts: all
  # vars:
  #   ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Say Hello
      ansible.builtin.debug:
        msg: Hello Ansible

    - name: Bootstrap install python
      ansible.builtin.raw: apk add -U python3 py3-pip
      register: out
      changed_when: "'Installing' in out.stdout"

    - name: Gather facts
      ansible.builtin.setup:

    - name: Install usermod
      community.general.apk:
        name: shadow
        update_cache: true

- name: Alpine 4
  become: true
  gather_facts: true
  hosts: alpine-04
  tasks:
    - name: Add user in alpine-04
      ansible.builtin.user:
        name: four
        uid: 1302
        non_unique: true

    - name: Create empty file
      tags: gen
      ansible.builtin.file:
        path: "/tmp/four"
        state: touch
        mode: "0777"
        owner: four
        group: four

    - name: Reset UID four in alpine-04
      tags: reset
      run_once: true
      ansible.builtin.shell: "groupmod -og 1302 four && usermod -ou 1302 -g 1302 four"
      register: out
      changed_when: "'usermod: no changes' not in out.stderr"

- name: Alpine 1-3
  become: true
  gather_facts: true
  hosts: ~alpine-0[1-3]
  tasks:
    - name: Add user in alpine-01
      delegate_to: alpine-01
      run_once: true
      ansible.builtin.user:
        name: "{{ item.name }}"
        uid: "{{ item.uid }}"
        non_unique: true
      loop:
        - name: unique
          uid: 1900
        - name: zero
          uid: 1100
        - name: one
          uid: 1302
        - name: two
          uid: 1102
        - name: three
          uid: 1103

    - name: Add user in alpine-02
      delegate_to: alpine-02
      run_once: true
      ansible.builtin.user:
        name: "{{ item.name }}"
        uid: "{{ item.uid }}"
        non_unique: true
      loop:
        - name: zero
          uid: 1200
        - name: one
          uid: 1302
        - name: two
          uid: 1202
        - name: three
          uid: 1203

    - name: Add user in alpine-03
      delegate_to: alpine-03
      run_once: true
      ansible.builtin.user:
        name: "{{ item.name }}"
        uid: "{{ item.uid }}"
        non_unique: true
      loop:
        - name: zero
          uid: 1100
        - name: one
          uid: 1201
        - name: two
          uid: 1302
        - name: three
          uid: 1103

    - name: Create empty file
      tags: gen
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: touch
        mode: "{{ item.mode | default(omit) }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
      loop:
        - path: "/tmp/zero"
          mode: "777"
          owner: zero
          group: zero

        - path: "/tmp/one"
          mode: "777"
          owner: one
          group: one

        - path: "/tmp/two"
          mode: "777"
          owner: two
          group: two

        - path: "/tmp/three"
          mode: "777"
          owner: three
          group: three

        - path: "/tmp/zero-suid"
          mode: "4777"
          owner: zero
          group: zero

        - path: "/tmp/one-suid"
          mode: "4777"
          owner: one
          group: one

        - path: "/tmp/two-suid"
          mode: "4777"
          owner: two
          group: two

        - path: "/tmp/three-suid"
          mode: "4777"
          owner: three
          group: three

        - path: "/tmp/zero-sgid"
          mode: "2777"
          owner: zero
          group: zero

        - path: "/tmp/one-sgid"
          mode: "2777"
          owner: one
          group: one

        - path: "/tmp/two-sgid"
          mode: "2777"
          owner: two
          group: two

        - path: "/tmp/three-sgid"
          mode: "2777"
          owner: three
          group: three

      when: ansible_hostname != ""


    - name: Reset UID unique in alpine-01
      tags: reset
      delegate_to: alpine-01
      run_once: true
      ansible.builtin.shell: "groupmod -og {{ item.gid }} {{ item.name }} && usermod -ou {{ item.uid }} -g {{ item.gid }} {{ name }}"
      register: out
      changed_when: "'usermod: no changes' not in out.stderr"
      loop:
        - name: unique
          uid: 1900
          gid: 1900
        - name: zero
          uid: 1100
          gid: 1100
        - name: one
          uid: 1302
          gid: 1302
        - name: two
          uid: 1102
          gid: 1102
        - name: three
          uid: 1103
          gid: 1103
          
    - name: Reset UID unique in alpine-02
      tags: reset
      delegate_to: alpine-02
      run_once: true
      ansible.builtin.shell: "groupmod -og {{ item.gid }} {{ item.name }} && usermod -ou {{ item.uid }} -g {{ item.gid }} {{ name }}"
      register: out
      changed_when: "'usermod: no changes' not in out.stderr"
      loop:
        - name: zero
          uid: 1200
          gid: 1200
        - name: one
          uid: 1302
          gid: 1302
        - name: two
          uid: 1202
          gid: 1202
        - name: three
          uid: 1203
          gid: 1203
    
    - name: Reset UID unique in alpine-03
      tags: reset
      delegate_to: alpine-03
      run_once: true
      ansible.builtin.shell: "groupmod -og {{ item.gid }} {{ item.name }} && usermod -ou {{ item.uid }} -g {{ item.gid }} {{ name }}"
      register: out
      changed_when: "'usermod: no changes' not in out.stderr"
      loop:
        - name: zero
          uid: 1300
          gid: 1300
        - name: one
          uid: 1201
          gid: 1201
        - name: two
          uid: 1302
          gid: 1302
        - name: three
          uid: 1103
          gid: 1103
